import { Suite } from "./suite";
import { ConsoleLine } from "./consoleline";
import { ReponseType } from "./response";
export declare class Scenario {
    readonly suite: Suite;
    protected title: string;
    protected log: Array<ConsoleLine>;
    protected failures: Array<string>;
    protected passes: Array<string>;
    protected onDone: Function;
    protected initialized: number | null;
    protected start: number | null;
    protected end: number | null;
    protected requestStart: number | null;
    protected requestLoaded: number | null;
    protected responseType: ReponseType;
    protected then: Function | null;
    protected url: string | null;
    protected waitToExecute: boolean;
    protected nextLabel: string | null;
    protected options: any;
    constructor(suite: Suite, title: string, onDone: Function);
    failed(): boolean;
    passed(): boolean;
    jsonBody(jsonObject: any): Scenario;
    body(str: string): Scenario;
    proxy(proxyUri: string): Scenario;
    timeout(timeout: number): Scenario;
    wait(bool?: boolean): Scenario;
    form(form: {}): Scenario;
    maxRedirects(n: number): Scenario;
    followRedirect(onRedirect: boolean | Function): Scenario;
    auth(authorization: {
        username: string;
        password: string;
    }): Scenario;
    headers(headers: {}): Scenario;
    header(key: string, value: any): Scenario;
    type(type: ReponseType): Scenario;
    method(method: string): Scenario;
    isDone(): boolean;
    subheading(message: string): Scenario;
    comment(message: string): Scenario;
    pass(message: string): Scenario;
    fail(message: string, isOptional?: boolean): Scenario;
    open(url: string): Scenario;
    assertions(then: Function): Scenario;
    skip(): Scenario;
    execute(): Scenario;
    Scenario(title: string, tags?: [string]): Scenario;
    Json(title: string, tags?: [string]): Scenario;
    Image(title: string, tags?: [string]): Scenario;
    Html(title: string, tags?: [string]): Scenario;
    Stylesheet(title: string, tags?: [string]): Scenario;
    Script(title: string, tags?: [string]): Scenario;
    Resource(title: string, tags?: [string]): Scenario;
    label(message: string): Scenario;
    getLog(): Array<ConsoleLine>;
    protected getExecutionTime(): number;
    done(): Scenario;
    getUrl(): string | null;
    getRequestLoadTime(): number | null;
}
